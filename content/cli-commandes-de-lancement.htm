<h2 id="cli-commandes-de-lancement">CLI / Commandes de lancement</h2><p>La façon la plus simple de lancer NodeAtlas est de se positionner dans le répertoire hébergeant votre site et de lancer la commande <code>\&gt; node &lt;/path/to/&gt;node-atlas/</code>. Cependant il existe des options de lancement pour faire bien plus que lancer le site.</p><p>Chacune des commandes qui vont suivre peut être couplée avec les autres de cette manière :</p><pre><code class="lang-bash">\&gt; node &lt;/path/to/&gt;node-atlas/ --directory hello-world --webconfig config.fr-fr.js --httpPort 80 --browse
</code></pre><p>or this</p><pre><code class="lang-bash">\&gt; nodeatlas --lang fr-fr --httpSecure security/server --browse hello-world
</code></pre><h3 id="help">--help</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-h, --help
</code></pre><h4 id="explication">Explication</h4><p>Pour obtenir de l&#39;aide (ouvrir le MAN) sur les commandes ci-après listé directement dans la CLI, utilisez <code>--help</code></p><pre><code>\&gt; nodeatlas --help
</code></pre><h3 id="version">--version</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-V, --version
</code></pre><h4 id="explication">Explication</h4><p>Pour connaître la version de NodeAtlas que vous utilisez avec la CLI, il vous suffit de la retourner au format <code>vX.X.X</code> grâce à <code>--version</code>.</p><pre><code>\&gt; nodeatlas --version
</code></pre><h3 id="browse-subpath">--browse [subpath]</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-b, --browse [subpath]
</code></pre><h4 id="explication">Explication</h4><p>Cette commande permet d&#39;ouvrir votre navigateur à l&#39;adresse sur laquelle le site va tourner. Très pratique quand vous ne vous souvenez plus du port pour votre version de développement. Cette commande ne sert à rien si elle est couplée avec <code>--generate</code> (voir plus loin).</p><pre><code>\&gt; nodeatlas --browse
</code></pre><p>Vous pouvez également cibler une page précise en ajoutant la fin de l&#39;url.</p><pre><code>\&gt; nodeatlas --browse index.html
</code></pre><h3 id="directory">--directory</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-d, --directory &lt;path&gt;
</code></pre><h4 id="explication">Explication</h4><p>Il est possible de lancer NodeAtlas depuis un autre endroit que le dossier où est hébergé le site que vous souhaitez faire tourner. La commande <code>--directory</code> vous sera alors très utile.</p><pre><code class="lang-bash">\&gt; nodeatlas --directory &lt;/path/to/your/website/directory&gt;/
</code></pre><h3 id="webconfig">--webconfig</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-w, --webconfig &lt;webconfigName&gt;
</code></pre><h4 id="explication">Explication</h4><p>Par défaut, NodeAtlas va lire votre fichier <code>webconfig.json</code>. Il est possible qu&#39;en plus de ce fichier vous ayez créé un autre fichier <code>webconfig.prod.json</code> dont le nom de domaine est différent. Ou encore un <code>webconfig.fr-fr.json</code> avec des urls et des variations dans une autre langue. Plutôt que de renommer vos fichiers en <code>webconfig.json</code> avant de lancer le site, précisez simplement votre autre nom de configuration. Dans l&#39;exemple suivant, notre fichier sera <code>webconfig.alternatif.json</code>.</p><pre><code>\&gt; nodeatlas --webconfig webconfig.alternatif.json
</code></pre><h3 id="httphostname">--httpHostname</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-u, --httpHostname &lt;httpHostname&gt;
</code></pre><h4 id="explication">Explication</h4><p>Il est parfois utile de demander son adresse IP via un <code>ipconfig</code> pour le paramettrer dans l&#39;url afin de rendre son site entièrement disponible sur un périphérique du réseau local (smartphone par exemple). Vous pourrez le faire avec cette commande.</p><pre><code>\&gt; nodeatlas --httpHostname 192.168.1.1
</code></pre><h3 id="httpport">--httpPort</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-p, --httpPort &lt;httpPort&gt;
</code></pre><h4 id="explication">Explication</h4><p>Vous n&#39;allez peut être pas vous ennuyer à changer votre port d&#39;écoute sur tous vos projets et parfois vous allez devoir travailler sur deux sites différents en même temps. Avec cette commande vous n&#39;aurez pas besoin de couper vos sites alternativement pour libérer le port d&#39;écoute, il suffira d&#39;en choisir un au lancement.</p><pre><code>\&gt; nodeatlas --httpPort 7778
</code></pre><h3 id="generate">--generate</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-g, --generate
</code></pre><h4 id="explication">Explication</h4><p>Si vous modifiez un élément dans votre fichier de variation commun ou même dans un de vos composants de view appelé sur plusieurs pages, vous n&#39;allez pas recharger chaque page pour mettre à jour vos fichiers de sortie. Il suffira alors d&#39;utiliser <code>--generate</code>. Cette commande copiera l&#39;intégralité du contenu du dossier <code>assetsRelativePath</code> dans <code>serverlessRelativePath</code> si leur chemin est différent.</p><pre><code>\&gt; nodeatlas --generate
</code></pre><h3 id="cache">--cache</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-c, --cache
</code></pre><h4 id="explication">Explication</h4><p>Si vous souhaitez éviter d&#39;avoir des ressources en cache pendant votre phase de développement, le plus simple est d&#39;utiliser cette option. C&#39;est votre unique possiblilité d&#39;avoir un « Simple Serveur Web » sans cache.</p><pre><code>\&gt; nodeatlas --cache
</code></pre><h3 id="create">--create</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-i, --create [path]
</code></pre><h4 id="explication">Explication</h4><p>NodeAtlas contient un dossier <code>templates</code> qui contient des exemples de site prèt à l&#39;usage. Pour les installer dans le répertoire dans lequel vous allez exécuter NodeAtlas il faut vous servir de <code>--create</code> suivi du dossier contenu dans <code>templates</code> que vous souhaitez utiliser. Par défaut, c&#39;est la valeur <code>hello-world</code> qui est utilisée. <em>Valeurs possible : <code>hello-world</code>.</em></p><pre><code>\&gt; nodeatlas --create hello-world
</code></pre><h3 id="httpsecure">--httpSecure</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-s, --httpSecure [pathName]
</code></pre><h4 id="explication">Explication</h4><p>Si vous utilisez l&#39;option <code>--httpSecure</code>, tous les chemins seront accédez en HTTPs. Vous devez définir les fichiers <code>.crt</code> and <code>.key</code> avec <code>pathName</code> si vous souhaitez que le serveur lui-même se lance en HTTPs. Par exemple, si vous avez les fichiers <code>security/server.crt</code> et <code>security/server.key</code> depuis la racine du site NodeAtlas, vous devez utiliser la commande suivante :</p><pre><code>\&gt; node &lt;/path/to/&gt;node-atlas/ --httpSecure security/server
</code></pre><h3 id="lang">--lang</h3><h4 id="utilisation">Utilisation</h4><pre><code class="lang-bash">-l, --lang &lt;cultureCode-countryCode&gt;
</code></pre><h4 id="explication">Explication</h4><p>En utilisant <code>--lang</code> vous changerez la langue de utilisée par NodeAtlas. En réalité cette commande remplace le contenu du fichier <code>languages/default.json</code> par celui de <code>languages/fr-fr.json</code> si le paramètre passé est « fr-fr » comme dans l&#39;exemple ci-dessous. Lancer NodeAtlas ultérieurement conservera la dernière langue utilisée.</p><pre><code>\&gt; nodeatlas --lang fr-fr
</code></pre><div><div class="before">
                            <a href="pour-aller-plus-loin.html">◄ Pour aller plus loin</a>
                        </div><div class="after">
                            <a href="api-nodeatlas-comme-module-npm.html">API / NodeAtlas comme module NPM ►</a>
                        </div></div>