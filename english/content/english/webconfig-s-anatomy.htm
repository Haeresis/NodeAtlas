<h2 id="webconfig-s-anatomy">Webconfig's Anatomy</h2><p>The webconfig is that alow you to drive how NodeAtlas will work. If you want use views, or controllers, or if you need some variations, if you want to enable PUT/DELETE http request, etc. Without webconfig, NodeAtlas run in Simple Web Server. This is the complet list of parameters of a webconfig. Each are optional depends on your needs.</p><h3 id="na-webconfig"><NA>.webconfig</h3><pre><code class="lang-js">Object{
    "assetsCopy": Boolean,
    "assetsRelativePath": String&lt;path-from-root>,
    "bundles": (String&lt;filepath-from-root> | Object{
        "javascripts": Object{
        ... url: Array.String&lt;filepath-from-assets>
        },
        "stylesheets": Object{
        ... url: Array.String&lt;filepath-from-assets>
        }
    }),
    "cache": Boolean,
    "charset": String,
    "controller": String&lt;filepath-from-controllers>,
    "controllersRelativePath": String&lt;path-from-root>,
    "delete": Boolean,
    "engine": String,
    "index": Boolean,
    "get": Boolean,
    "headers": Object,
    "htmlGenerationBeforeResponse": Boolean,
    "httpHostname": String,
    "httpPort": Number,
    "httpSecure": (String&lt;filepath-from-root> | Boolean),
    "httpSecureKeyRelativePath": String&lt;filepath-from-root>,
    "httpSecureCertificateRelativePath": String&lt;filepath-from-root>,
    "injectCss": (String&lt;filepath-from-assets> | Array.String&lt;filepath-from-assets>),
    "imgOptimizationsBeforeResponse": Boolean,
    "imgOptimizationsEnable": Boolean,
    "jsBundlingBeforeResponse": Boolean,
    "jsBundlingEnable": Boolean,
    "languageCode": String,
    "less": (Boolean | Object{
        "autoprefix": Boolean,
        "compress": Boolean,
        "files": (String&lt;filepath-from-root> | Array.String&lt;filepath-from-assets>),
        "paths": Array.String&lt;path-from-assets>,
        "sourceMap": Boolean
    }),
    "middlewares": (String&lt;filepath-from-middlewares> | Array.String&lt;filepath-from-middlewares>),
    "middlewaresRelativePath": String&lt;path-from-root>,
    "mimeType": String,
    "optimizations": (String&lt;filepath-from-root> | Object{
        "gif": Object,
        "images": Object{
        ... url: String&lt;filepath-from-assets>
        },
        "jpg": Object,
        "png": Object,
        "svg": Object
    },
    "options": Boolean,
    "output": Boolean,
    "post": Boolean,
    "pug": Boolean,
    "put": Boolean,
    "routes": (String&lt;filepath-from-root> | Object{
    ... "(String&lt;/url> | String&lt;key>)": String&lt;filepath-from-views> | NA&lt;routeParameter>)
    } | Array.NA&lt;routeParameter>,
    "serverlessRelativePath": String&lt;path-from-root>,
    "session": Object,
    "staticOptions": Object&lt;from-express-statics-options>,
    "statics": String&lt;filepath-from-root> | Object{
    ... /virtual: (String&lt;path-from-root> | Object{
            "path": String&lt;path-from-root>,
            "staticOptions": Object&lt;from-express-statics-options>
        })
    } | Array.Object{
        "path": String&lt;path-from-root>,
        "staticOptions": Object&lt;from-express-statics-options>,
        "virtual": String&lt;urlpath-from-base>
    },
    "cssBundlingBeforeResponse": Boolean,
    "cssBundlingEnable": Boolean,
    "socketClientFile": String&lt;urlpath-from-base>,
    "socketServerOptions": Object&lt;from-socketio-server-options>,
    "stylus": (Boolean | Object{
        "autoprefix": Boolean,
        "compress": Boolean,
        "files": (String&lt;filepath-from-root> | Array.String&lt;filepath-from-assets>),
        "paths": Array.String&lt;path-from-assets>,
        "sourceMap": Boolean,
    }),
    "templateEngineDelimiter": String,
    "urlHostname": String,
    "urlPort": Number,
    "urlRelativeSubPath": String&lt;urlpath-from-root>,
    "variation": String&lt;filepath-from-variations>,
    "variationsRelativePath": String&lt;path-from-root>,
    "version": String&lt;xx.xx.xx>,
    "view": String&lt;filepath-from-views>,
    "viewsRelativePath": String&lt;path-from-root>
}
</code></pre><h3 id="na-routeparameters"><NA>.routeParameters</h3><pre><code class="lang-js">Object{
    "charset": String,
    "controller": String&lt;filepath-from-controllers>,
    "delete": Boolean,
    "get": Boolean,
    "headers": Object,
    "injectCss": (String&lt;filepath-from-assets> | Array.String&lt;filepath-from-assets>),
    "key": String,
    "middlewares": (String&lt;filepath-from-middlewares> | Array.String&lt;filepath-from-middlewares>),
    "mimeType": String,
    "options": Boolean,
    "output": (String&lt;filepath-into-serverless> | Boolean&lt;false>),
    "post": Boolean,
    "put": Boolean,
    "redirect": (String&lt;urlpath-from-base | url>),
    "statusCode": Number,
    "url": String&lt;urlpath-from-base>,
    "variation": String&lt;filepath-from-variations>,
    "view": String&lt;filepath-from-views>
}
</code></pre><div><div class="before">
                            <a href="more-features.html">◄ More Features</a>
                        </div><div class="after">
                            <a href="cli-running-commands.html">CLI / Running commands ►</a>
                        </div></div>