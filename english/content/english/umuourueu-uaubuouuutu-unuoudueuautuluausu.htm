<h2 id="more-about-nodeatlas">More About NodeAtlas</h2><p>NodeAtlas is made of such a way that the instanciate object contains all the functions allowing it to function. NodeAtlas delivers itself it&#39;s object into controllers via the methods used in the Back-end mode with Node.js for you to occasionally change his behavior.</p><h3 id="nodeatlas-vs-others">NodeAtlas VS Others</h3><div class="table"><table>
<thead>
<tr>
<th></th>
<th><strong>NodeAtlas</strong></th>
<th>Express</th>
<th>Hapi</th>
<th>Sails</th>
<th>Restify</th>
<th>LoopBack</th>
<th>Meteor</th>
</tr>
</thead>
<tbody>
<tr>
<td>Type</td>
<td>Web <strong>MVC(2)</strong> framework</td>
<td>HTTP server library</td>
<td>HTTP server framework</td>
<td>Web MVC framework</td>
<td>REST HTTP library</td>
<td>API framework</td>
<td>Full-stack JavaScript app platform</td>
</tr>
<tr>
<td>Top Features</td>
<td>Simplicity, <strong>Evolutivity</strong>, Modularity</td>
<td>HTTP routing, middleware</td>
<td>Modularity, security</td>
<td>Rails familiarity, MVC</td>
<td>Simplicity, REST routing</td>
<td>Enterprise connectivity</td>
<td>Framework Front-end et Back-end</td>
</tr>
<tr>
<td>Suitable For</td>
<td><strong>Web sites</strong>, Web apps, REST APIs, <strong>Templating</strong></td>
<td>Simple web apps</td>
<td>Web apps, APIs</td>
<td>Web apps, APIs</td>
<td>Simple REST APIs</td>
<td>Web apps, APIs</td>
<td>Web apps</td>
</tr>
<tr>
<td>Pure Node runtime</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>Yes</td>
<td>No</td>
</tr>
<tr>
<td>Extensions</td>
<td><strong>Atlas plugin</strong>, Npm module, Express middleware</td>
<td>Express middleware</td>
<td>Hapi Plugins</td>
<td></td>
<td></td>
<td></td>
<td>Meteor package and repository, Npm module</td>
</tr>
<tr>
<td>Data sources</td>
<td><strong>Builtin</strong>: In-memory /file (JSON), REST. With <strong>external npm module</strong>: NoSQL (MongoDB...), SQL (MySql...)</td>
<td></td>
<td></td>
<td>In-memory, File, PostgreSQL, MySQL, MongoDB</td>
<td></td>
<td>In-memory/file, SQL NoSQL, ATG, Email, REST, SOAP</td>
<td>MongoDB, MySQL and PostgreSQL via 3rd-party Meteor packages</td>
</tr>
<tr>
<td>Main support language</td>
<td>French</td>
<td>English</td>
<td>English</td>
<td>English</td>
<td>English</td>
<td>English</td>
<td>English</td>
</tr>
</tbody>
</table></div>