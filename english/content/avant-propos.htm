<h2 id="avant-propos">Avant-propos</h2><p>NodeAtlas est un Framework JavaScript MVC(2) côté serveur sous forme de <a href="https://www.npmjs.com/package/node-atlas">module NPM</a> (<a href="https://www.npmjs.com/package/node-atlas">node-atlas</a>) et tournant avec <a href="https://nodejs.org/">Node.js</a>. Il vous permet de :</p><ul>
<li><p>Créer, maintenir et documenter des interfaces utilisateurs HTML / CSS / JavaScript pour créer un ensemble de livrables clients cohérants afin de les fournirs en tant que guide de style pour la réalisation de divers sites ou applications web.</p>
<blockquote>
<p>Exemple : <a href="https://www.lesieur.name/test-case-atlas/">Pages, Composants et Documentation d&#39;interface web</a> ou le site officiel NodeAtlas.</p>
</blockquote>
</li>
<li><p>Créer, maintenir et faire tourner des sites internationalisés (et localisables) sans mettre en place le moindre fichier JavaScript. Particulièrement taillé pour les débutants ou la réalisation de sites vitrines hautement performant et maintenable en des temps records.</p>
<blockquote>
<p>Exemple : <a href="http://bruno.lesieur.name/">Simple page web</a></p>
</blockquote>
</li>
<li><p>Développer des sites, des applications ou des API distantes en <a href="https://nodejs.org/">Node.js</a> de manière évolutives et tournant côté serveur tout en vous permettant grâce à l&#39;éco-système <a href="https://www.npmjs.com/">npm</a> et les built-in fonctions de créer des contenus temps réel, de packager et optimiser vos sites pour de hautes performances, d&#39;être orienté composant avec des réponses HTTP passant la validation W3C et parfaitement indexable par les moteurs de recherche pour le SEO.</p>
<blockquote>
<p>Exemple : <a href="http://blog.lesieur.name/">Blog</a>, <a href="http://www.lesieur.name/">Portfolio</a> ou <a href="http://www.lesieur.name/api/">API Distante</a></p>
</blockquote>
</li>
</ul><h3 id="pourquoi-nodeatlas">Pourquoi NodeAtlas ?</h3><p>NodeAtlas est designé pour créer des sites évolutifs et pour permettre aux développeurs Front-end et Back-end d&#39;embrasser <a href="https://nodejs.org/">Node.js</a> avec une courbe de difficulté aisée.</p><p>Commencez avec une simple page HTML,</p><ul>
<li>puis créez d&#39;autres pages,</li>
<li>puis internationalisez les,</li>
<li>puis minifiez/offusquez/compressez vos sources,</li>
<li>puis utiliser Stylus ou/et Less,</li>
<li>puis prenez la main sur la logique serveur,</li>
<li>puis rendez tout ça temps réel avec <a href="http://socket.io/">Socket.io</a>,</li>
<li>puis connectez vous à <a href="https://www.mysql.fr/">MySQL</a>, <a href="https://www.mongodb.org/">MongoDB</a>, <a href="https://www.elastic.co/">ElasticSearch</a>...,</li>
<li>puis soyez orienté composant avec <a href="https://github.com/Haeresis/ComponentAtlas">ComponentAtlas</a>,</li>
<li>puis soyez orienté services grâce à des projets comme <a href="https://github.com/Haeresis/ApiAtlas">ApiAtlas</a>,</li>
<li>puis laissez votre client éditer son site avec <a href="https://github.com/Haeresis/EditAtlas">EditAtlas</a>,</li>
<li>puis créer des plugins,</li>
<li>puis...</li>
</ul><h3 id="et-les-autres-frameworks-javascript">Et les autres Frameworks JavaScript ?</h3><p>Contrairement aux Frameworks JavaScript côté client comme Vue, Angular ou React, NodeAtlas fonctionne côté serveur et délivre son contenu derrière des URLs par réponse HTTP. Les sites sont indexables et valides W3C : c&#39;est à dire que le code utile est bien renvoyé par la réponse HTTP en premier lieu, et est ensuite modifiée par requête AJAX ou Websocket si vous le souhaitez. Cela signifie donc que NodeAtlas n&#39;est pas une alternative au nombreux Frameworks JavaScript côté client qui ne se servent que de <a href="https://nodejs.org/en/">Node.js</a> pour l&#39;utilisation de <a href="https://www.npmjs.com/">npm</a> ou <a href="http://jspm.io/">jspm</a> ou <a href="http://gulpjs.com/">gulp</a>. NodeAtlas est plutôt une alternative à Sails ou Meteor. Il forme un socle au dessus de Node.js et remplace bien votre code PHP, JAVA ou encore C# côté serveur. À l&#39;instar de <a href="https://www.meteor.com/">Meteor.js</a>, NodeAtlas vous fournit un cadre de travail et une structure initiale (que vous pouvez modifier) et des outils vous permettant de vous passer de <a href="http://gulpjs.com/">gulp</a> mais contrairement à <a href="https://www.meteor.com/">Meteor.js</a> l&#39;objet <code>NA</code> n&#39;est disponible que côté serveur par défaut. Il vous est donc laissé le choix d&#39;étendre les mécanismes NodeAtlas à votre partie cliente ou d&#39;utiliser la structure de votre choix.</p><p>Pour un comparatif avec d&#39;autre Librarie/Framework/API JavaScript côté serveur, <a href="plus-sur-nodeatlas.html#nodeatlas-vs-les-autres">vous pouvez consulter cette grille</a>.</p><h3 id="exemples-de-realisations-avec-nodeatlas">Exemples de réalisations avec NodeAtlas</h3><p>Voici une liste de repository que vous pouvez décortiquer à votre gré :</p><ul>
<li><a href="https://github.com/Haeresis/ResumeAtlas/">Génération et maintenance de maquette HTML</a>.</li>
<li><a href="https://github.com/Haeresis/TestCaseAtlas/">Test et Documentation d&#39;Interface Ulilisateur</a>.</li>
<li><a href="https://github.com/Haeresis/NodeAtlas/tree/gh-pages/">Maintenance de site HTML (sans Serveur)</a>.</li>
<li><a href="https://github.com/Haeresis/BookAtlas/">Site Node.js avec Websocket et PopState</a>.</li>
<li><a href="https://github.com/Haeresis/BlogAtlas/">Site Node.js avec base MongoDB et Redis</a>.</li>
<li><a href="https://github.com/Haeresis/EditAtlas/">Exemple Node.js de modification de contenu live sans Back-office</a>.</li>
<li><a href="https://github.com/Haeresis/SimpleAtlas/">Simple Serveur Web pour un dossier</a>.</li>
<li><a href="https://github.com/Haeresis/ApiAtlas/">Exemple d&#39;API REST</a>.</li>
<li><a href="https://github.com/Haeresis/LessAtlas/">Utilisation du préprocesseur Less en temps réel côté serveur</a>.</li>
<li><a href="https://github.com/Haeresis/ComponentAtlas/">Création d&#39;extensions pour booster les capacités natives</a>.</li>
</ul><h3 id="documentation">Documentation</h3><p>En complément de cette documentation, vous avez également accès aux,</p><ul>
<li><a href="https://github.com/Haeresis/NodeAtlas#node-atlas">tl;dr</a>,</li>
<li><a href="https://node-atlas.js.org/doc/index.html">détails des fonctions de l&#39;objet NA</a> (En) et vous pouvez aussi</li>
<li><a href="https://gitter.im/NodeAtlas/Aide">discuter sur le chat ou demander de l&#39;aide pour NodeAtlas</a>.</li>
</ul><h3 id="contribution">Contribution</h3><p>Si vous souhaitez contribuer avec :</p><ul>
<li>De l&#39;amélioration ou de la correction de code,</li>
<li>De la correction d&#39;orthographe pour la documentation française ou</li>
<li>De la traduction décente pour la documentation anglaise</li>
</ul><p>Merci de respecter ses étapes :</p><ol>
<li>Forkez le repository NodeAtlas.</li>
<li>Travaillez sur une branch créé à partir de la branch master.</li>
<li>Commitez et pushez votre branch.</li>
<li>Faites une pull request.</li>
<li>Soyez patient. ;-)</li>
</ol><p>Tout en respectant les conventions suivantes :</p><ul>
<li><a href="http://www.sonarqube.org/">Passez le test Sonarqube JS avec un rang A</a> : Bugs, Vulnerabilités et Dette Technique.</li>
</ul><p>Merci d&#39;avance pour votre aide !</p>